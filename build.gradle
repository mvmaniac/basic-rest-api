plugins {
  id 'org.springframework.boot' version '3.3.5'
  id 'io.spring.dependency-management' version '1.1.6'
  id 'org.asciidoctor.jvm.convert' version "3.3.2" // restdoc -> asciidoc으로 사용시 필요?
  id 'com.epages.restdocs-api-spec' version '0.17.1' // restdoc -> openapi3으로 사용시 필요?
  id 'java'
}

group = 'io.devfactory'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
  asciidoctorExt
}

repositories {
  mavenCentral()
}

ext {
  set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-hateoas'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.data:spring-data-rest-hal-explorer'

  implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'
  implementation 'org.mapstruct:mapstruct:1.5.5.Final'

  // 브라우저에서 요청 시 xml 형식으로 나옴
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.14.0'

  // restdoc -> openapi3으로 사용시 필요?
  implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

  // restdoc -> asciidoc으로 사용시 필요?
  asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

  runtimeOnly 'com.h2database:h2'

  developmentOnly 'org.springframework.boot:spring-boot-devtools'

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
  testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.17.1'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
  outputs.dir snippetsDir
  useJUnitPlatform()
}

tasks.named('compileJava') {
  inputs.files(tasks.named('processResources'))
}

asciidoctor {
  inputs.dir snippetsDir
  configurations 'asciidoctorExt'

  sources { // 특정 파일만 html로 만든다.
    include("**/index.adoc")
  }
  baseDirFollowsSourceFile() // 다른 adoc 파일을 include 할 때 경로를 baseDir로 맞춘다.

  dependsOn test
}

tasks.register('copyAsciidocHTML', Copy) {
  dependsOn asciidoctor
  from "${asciidoctor.outputDir}"
  into "${project.rootDir}/src/main/resources/static/docs"
}

bootJar {
  dependsOn copyAsciidocHTML
}

openapi3 {
  server = 'http://localhost:8080'
  title = 'Basic Rest API'
  description = 'Basic Rest API description'
  version = '0.1.0'
  format = 'yaml'

  copy {
    from "build/api-spec"
    into "${project.rootDir}/src/main/resources/static/docs"
  }
}
